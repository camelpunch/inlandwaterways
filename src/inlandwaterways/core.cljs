(ns inlandwaterways.core
  (:require [clojure.browser.repl :as repl]
            [clojure.string :refer [split]]
            [goog.events :as events]))

(enable-console-print!)

(def map-opts {:center { :lat 53.0672367 :lng -2.52393 }
               :zoom 8})

(def raw-coords "341029.843696856,376207.405923635 341038.343896856,376200.000323635 341067.687396856,376172.406423636 341116.593696856,376126.999423634 341143.905796856,376089.062723635 341164.312396856,376053.250423634 341174.094396856,376035.500623636 341184.249896856,376017.687523635 341206.637396855,375976.415623635 341227.749596856,375935.187623635 341232.812496856,375924.406723635 341236.406096856,375914.406323636 341238.344396856,375907.562823635 341265.343796856,375850.687423635 341286.989696856,375803.636823636 341314.003296856,375749.663823634 341364.128096855,375647.880223636 341392.033396856,375599.037323635 341423.753296856,375543.814723635 341453.033496856,375496.503023636 341466.220496856,375478.626623634 341480.655796856,375458.439723635 341528.246596856,375401.441623636 341546.871196856,375375.972123636 341567.876096856,375351.194023635 341586.743596856,375317.410423635 341593.211096856,375305.097023634 341600.804196856,375287.409223635 341607.710996856,375269.190323636 341615.086996856,375245.533823635 341618.431196855,375231.689123634 341621.306396856,375219.188323636 341622.713596855,375204.719423635 341626.025496855,375191.093023635 341628.855496855,375175.206623634 341629.559696856,375159.122523636 341631.686696855,375136.184423635 341633.486696856,375108.053023634 341635.029596856,375082.581023635 341638.655596856,375056.558523634 341641.205096856,375034.724023635 341651.125396856,374975.531723635 341656.656096856,374952.781123634 341660.935896856,374937.686823634 341671.714196856,374909.652323635 341674.448296856,374902.996023634 341739.233496856,374745.270223634 341778.645896856,374672.781123634 341783.230596855,374665.767023636 341790.177496856,374659.591523634 341814.645496855,374626.865023635 341843.142696856,374592.130423635 341865.694296855,374564.800223636 341878.143496856,374546.171723636 341883.668896856,374540.931723636")

(def shroppie-coord [364129.937596856,348351.139023636])

(defn os2latlng [x y]
  (let [osref (js/OSRef. x y)
        latlng (.toLatLng osref)]
    (.OSGB36ToWGS84 latlng)
    {:lat (.-lat latlng)
     :lng (.-lng latlng)}))

(println (count (map #(split % #",") (split raw-coords #" "))))
(def coords (map #(apply os2latlng %) (map #(split % #",") (split raw-coords #" "))))

(println (clj->js (take 2 coords)))

(def polyline
  (js/google.maps.Polyline. (clj->js {:path coords
                                      :geodesic true
                                      :strokeColor "#000000"
                                      :strokeOpacity 1.0,
                                      :strokeWeight 4})))

(defn map-load []
  (let [map (js/google.maps.Map. (.getElementById js/document "map-canvas")
                                 (clj->js map-opts))]
    (.setMap polyline map)))

(events/listen js/window "load" map-load)
